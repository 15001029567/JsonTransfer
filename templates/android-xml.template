<?xml version="1.0" encoding="UTF-8"?>
<%
var allProperties = _.each(allProperties, function(prop) {
    // here I am mimicking the pre-defined Android formats that come with Style Dictionary, but using my "custom" categories (declared directly with the value as "type" prop)
    console.log('prop type=' + prop.type + " name=" + prop.name + " value="+ prop.value)
      prop.unit="";
    if(prop.type === 'color') {
        prop.tag = 'color';
    } else if(prop.type === 'size' || prop.type === 'sizing' || prop.type ==='spacing'
        || prop.type ==='spacing' || prop.type === 'borderRadius' || prop.type === 'borderWidth'|| prop.type === 'paragraphSpacing') {
        prop.tag = 'dimen';
   //   if(prop.value.find("p")==string::npos){
   //           prop.unit="dp";
     //  }
    }else if(prop.type === 'fontSizes' ) {
     prop.tag = 'dimen';
 //     if(prop.value.find("sp")==string::npos){
 //             prop.unit="sp";
 //    }
    }
     else if(prop.type === 'time' || prop.type === 'opacity' || prop.type === 'multiplier') {
        prop.tag = 'double';
    } else if(prop.type === 'content'||prop.type === 'fontFamilies') {
        prop.tag = 'string';
    } else {
        prop.tag = 'item';
    }
});
%>
<resources>
    <% _.each(allProperties, function(prop) {
     %><<%= prop.tag %> name="<%= prop.name %>"><%= prop.value %><%= prop.unit %></<%= prop.tag %>><% if (prop.comment) { %><!-- <%= prop.comment %> --><% } %>
    <% }); %>
</resources>
